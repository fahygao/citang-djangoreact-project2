{"ast":null,"code":"var _jsxFileName = \"/Users/herculesgao/Desktop/fun-projects/Web_test/citang_dict_frontend/src/App.js\";\nimport React, { useState } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport './app.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: []\n    };\n  }\n  componentDidMount() {\n    let data;\n    axios.get('http://localhost:8080').then(res => {\n      data = res.data;\n      this.setState({\n        details: data\n      });\n    }).catch(err => {});\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), this.state.details.map((output, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: output.long_Definition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n}\n// function App() {\n//   const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n//   return (\n// <>\n//     <div className=\"header\"> 词堂后花园</div>\n//     <div className=\"container\"><FlashcardList flashcards = {flashcards} /></div>\n//     </>\n//   );\n// }\n\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"恐龙抗狼\",\n  answer: \"该梗出自云南的博主 '云南权妹'近日作为洗脑神曲，刷屏网络。据悉，是因为博主在一次直播中，因记不住《眉飞色舞》的部分歌词，为维护直播效果，将歌词以前奏的“恐龙抗狼”代替。\"\n}, {\n  id: 2,\n  question: \"打脸\",\n  answer: \"意为被当面证明错误，使其丢脸。指在各种事件中，当事人用来辟谣的话被辟谣了。\"\n}, {\n  id: 3,\n  question: \"查水表\",\n  answer: \"该词语多用于形容当某人做出或做出一种不符合法律法规或破坏社会稳定又或者是某种言论，最后被领导请去约谈的一种情况。如今，这个词语多用来调侃某人说出某种敏感的信息时或将会受到某种处罚。\"\n}];\nexport default App;","map":{"version":3,"names":["React","useState","FlashcardList","axios","jsxDEV","_jsxDEV","App","Component","constructor","args","state","details","componentDidMount","data","get","then","res","setState","catch","err","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","output","id","long_Definition","SAMPLE_FLASHCARDS","question","answer"],"sources":["/Users/herculesgao/Desktop/fun-projects/Web_test/citang_dict_frontend/src/App.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport './app.css'\nimport axios from \"axios\";\n\nclass App extends React.Component{\n  state = {details: [],}\n  componentDidMount() {\n\n\n    let data; \n    axios.get('http://localhost:8080')\n    .then(res => {\n\n      data = res.data;\n      this.setState({\n          details: data\n\n\n      });\n    })\n    .catch(err => {})\n  }\n  render(){\n    return (\n      <div>\n        <hr></hr>\n        {this.state.details.map((output,id) => (\n          <div key = {id}>\n              <div>\n              {/* <h2>{output.word}</h2> */}\n              <h2>{output.long_Definition}</h2>\n              </div>\n          </div>\n        ))}\n      </div>\n\n\n    )\n\n  }\n\n\n\n\n}\n// function App() {\n//   const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n//   return (\n// <>\n//     <div className=\"header\"> 词堂后花园</div>\n//     <div className=\"container\"><FlashcardList flashcards = {flashcards} /></div>\n//     </>\n//   );\n// }\n\nconst SAMPLE_FLASHCARDS = [\n  {\n      id: 1, \n      question: \"恐龙抗狼\",\n      answer: \"该梗出自云南的博主 '云南权妹'近日作为洗脑神曲，刷屏网络。据悉，是因为博主在一次直播中，因记不住《眉飞色舞》的部分歌词，为维护直播效果，将歌词以前奏的“恐龙抗狼”代替。\"\n  },\n  {\n    id: 2, \n    question: \"打脸\",\n    answer: \"意为被当面证明错误，使其丢脸。指在各种事件中，当事人用来辟谣的话被辟谣了。\"\n},\n{\n  id: 3, \n  question: \"查水表\",\n  answer: \"该词语多用于形容当某人做出或做出一种不符合法律法规或破坏社会稳定又或者是某种言论，最后被领导请去约谈的一种情况。如今，这个词语多用来调侃某人说出某种敏感的信息时或将会受到某种处罚。\"\n}\n\n\n]\nexport default App;\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,SAASN,KAAK,CAACO,SAAS;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC/BC,KAAK,GAAG;MAACC,OAAO,EAAE;IAAG,CAAC;EAAA;EACtBC,iBAAiBA,CAAA,EAAG;IAGlB,IAAIC,IAAI;IACRV,KAAK,CAACW,GAAG,CAAC,uBAAuB,CAAC,CACjCC,IAAI,CAACC,GAAG,IAAI;MAEXH,IAAI,GAAGG,GAAG,CAACH,IAAI;MACf,IAAI,CAACI,QAAQ,CAAC;QACVN,OAAO,EAAEE;MAGb,CAAC,CAAC;IACJ,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAI,CAAC,CAAC,CAAC;EACnB;EACAC,MAAMA,CAAA,EAAE;IACN,oBACEf,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACf,KAAK,CAACC,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,EAACC,EAAE,kBAChCvB,OAAA;QAAAgB,QAAA,eACIhB,OAAA;UAAAgB,QAAA,eAEAhB,OAAA;YAAAgB,QAAA,EAAKM,MAAM,CAACE;UAAe;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC,GAJEG,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAKV;AAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,iBAAiB,GAAG,CACxB;EACIF,EAAE,EAAE,CAAC;EACLG,QAAQ,EAAE,MAAM;EAChBC,MAAM,EAAE;AACZ,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLG,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE;AACZ,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLG,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE;AACV,CAAC,CAGA;AACD,eAAe1B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}