{"ast":null,"code":"var _jsxFileName = \"/Users/herculesgao/Desktop/fun-projects/Web_test/citang_dict_frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport './app.css';\nimport axios from \"axios\";\n\n// class App extends React.Component{\n//   state = {details: [],}\n//   componentDidMount() {\n\n//     let data; \n//     axios.get('http://localhost:8080')\n//     .then(res => {\n\n//       data = res.data;\n//       this.setState({\n//           details: data\n\n//       });\n//     })\n//     .catch(err => {})\n//   }\n//   render(){\n//     return (\n//       <div>\n//         <hr></hr>\n//         {this.state.details.map((output,id) => (\n//           <div key = {id}>\n//               <div>\n//               <h2>{output.word}</h2>\n//               <h2>{output.Long_Definition}</h2>\n//               </div>\n//           </div>\n//         ))}\n//       </div>\n\n//     )\n\n//   }\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  useEffect(() => {\n    axios.get('http://localhost:8080').then(res => {\n      console.log(res.data);\n      // data = res.data;\n      // this.setState({\n      //     details: data\n\n      // });\n    }).catch(err => {});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \" \\u8BCD\\u5802\\u540E\\u82B1\\u56ED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rm10OUu+tLqQOUCYdubGrXFogq0=\");\n_c = App;\nconst SAMPLE_FLASHCARDS = [\n  //   {\n  //       id: 1, \n  //       question: \"恐龙抗狼\",\n  //       answer: \"该梗出自云南的博主 '云南权妹'近日作为洗脑神曲，刷屏网络。据悉，是因为博主在一次直播中，因记不住《眉飞色舞》的部分歌词，为维护直播效果，将歌词以前奏的“恐龙抗狼”代替。\"\n  //   },\n  //   {\n  //     id: 2, \n  //     question: \"打脸\",\n  //     answer: \"意为被当面证明错误，使其丢脸。指在各种事件中，当事人用来辟谣的话被辟谣了。\"\n  // },\n  // {\n  //   id: 3, \n  //   question: \"查水表\",\n  //   answer: \"该词语多用于形容当某人做出或做出一种不符合法律法规或破坏社会稳定又或者是某种言论，最后被领导请去约谈的一种情况。如今，这个词语多用来调侃某人说出某种敏感的信息时或将会受到某种处罚。\"\n  // }\n];\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FlashcardList","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","flashcards","setFlashcards","SAMPLE_FLASHCARDS","get","then","res","console","log","data","catch","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/herculesgao/Desktop/fun-projects/Web_test/citang_dict_frontend/src/App.js"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport './app.css'\nimport axios from \"axios\";\n\n// class App extends React.Component{\n//   state = {details: [],}\n//   componentDidMount() {\n\n\n//     let data; \n//     axios.get('http://localhost:8080')\n//     .then(res => {\n\n//       data = res.data;\n//       this.setState({\n//           details: data\n\n\n//       });\n//     })\n//     .catch(err => {})\n//   }\n//   render(){\n//     return (\n//       <div>\n//         <hr></hr>\n//         {this.state.details.map((output,id) => (\n//           <div key = {id}>\n//               <div>\n//               <h2>{output.word}</h2>\n//               <h2>{output.Long_Definition}</h2>\n//               </div>\n//           </div>\n//         ))}\n//       </div>\n\n\n//     )\n\n//   }\n\n\n\n\n// }\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n  \n  useEffect(() => {\n    axios\n    .get('http://localhost:8080')\n    .then(res => {\n      console.log(res.data)\n      // data = res.data;\n      // this.setState({\n      //     details: data\n\n\n      // });\n    })\n    .catch(err => {})\n\n\n\n\n  },[])\n\n\n\n  return (\n<>\n    <div className=\"header\"> 词堂后花园</div>\n    <div className=\"container\"><FlashcardList flashcards = {flashcards} /></div>\n    </>\n  );\n}\n\nconst SAMPLE_FLASHCARDS = [\n//   {\n//       id: 1, \n//       question: \"恐龙抗狼\",\n//       answer: \"该梗出自云南的博主 '云南权妹'近日作为洗脑神曲，刷屏网络。据悉，是因为博主在一次直播中，因记不住《眉飞色舞》的部分歌词，为维护直播效果，将歌词以前奏的“恐龙抗狼”代替。\"\n//   },\n//   {\n//     id: 2, \n//     question: \"打脸\",\n//     answer: \"意为被当面证明错误，使其丢脸。指在各种事件中，当事人用来辟谣的话被辟谣了。\"\n// },\n// {\n//   id: 3, \n//   question: \"查水表\",\n//   answer: \"该词语多用于形容当某人做出或做出一种不符合法律法规或破坏社会稳定又或者是某种言论，最后被领导请去约谈的一种情况。如今，这个词语多用来调侃某人说出某种敏感的信息时或将会受到某种处罚。\"\n// }\n\n\n]\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAKA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACW,iBAAiB,CAAC;EAE/DZ,SAAS,CAAC,MAAM;IACdG,KAAK,CACJU,GAAG,CAAC,uBAAuB,CAAC,CAC5BC,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrB;MACA;MACA;;MAGA;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI,CAAC,CAAC,CAAC;EAKnB,CAAC,EAAC,EAAE,CAAC;EAIL,oBACFf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCrB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAD,QAAA,eAAChB,OAAA,CAACH,aAAa;QAACQ,UAAU,EAAIA;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAC1E,CAAC;AAEP;AAACjB,EAAA,CA9BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAgCZ,MAAMI,iBAAiB,GAAG;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CAGC;AACD,eAAeJ,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}